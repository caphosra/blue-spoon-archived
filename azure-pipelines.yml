# Publish GitHub Pages

trigger:
  branches:
    include:
      - master
      - refs/tags/*

variables:
  nodeToolVersion: '12.10.0'
  outFile: 'target'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs: 
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: $(nodeToolVersion)
        displayName: 'Install node js'

      - script: npm install
        displayName: 'Set up environment'

      - script: npx webpack
        displayName: 'Compile all codes'

      - task: CopyFiles@2
        inputs:
          sourceFolder: '$(System.DefaultWorkingDirectory)/dist'
          contents: '**'
          targetFolder: '$(Build.ArtifactStagingDirectory)/dist'
        displayName: 'Copy codes to ArtifactStagingDirectory'

      - task: CopyFiles@2
        inputs:
          sourceFolder: '$(System.DefaultWorkingDirectory)/img'
          contents: '**'
          targetFolder: '$(Build.ArtifactStagingDirectory)/img'
        displayName: 'Copy images to ArtifactStagingDirectory'

      - task: CopyFiles@2
        inputs:
          sourceFolder: '$(System.DefaultWorkingDirectory)/pages'
          contents: '**'
          targetFolder: '$(Build.ArtifactStagingDirectory)/pages'
        displayName: 'Copy pages to ArtifactStagingDirectory'
      
      - script: cp ./index.html $(Build.ArtifactStagingDirectory)/index.html
        displayName: 'Copy index.html'
      
      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: $(Build.ArtifactStagingDirectory)
          artifactName: BuildOutput
        displayName: 'Publish artifact'
- stage: deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: 'Deploy'
    displayName: 'Deploy'
    environment: 'development'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
            - script: |
                mkdir ~/.ssh && mv $DOWNLOADSECUREFILE_SECUREFILEPATH ~/.ssh/id_rsa
                chmod 700 ~/.ssh && chmod 600 ~/.ssh/id_rsa
                ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
                mkdir target
                pushd target > /dev/null
                git clone git@github.com:capra314cabra/blue-spoon.git .
                git checkout gh-pages
                popd > /dev/null
              displayName: 'Setup git repo'

            - task: DownloadBuildArtifacts@0
              inputs:
                artifactName: 'BuildOutput'
                downloadPath: '$(System.DefaultWorkingDirectory)'
              displayName: 'Download artifact'

            - task: CopyFiles@2
              inputs:
                sourceFolder: '$(System.DefaultWorkingDirectory)/BuildOutput'
                contents: '**'
                targetFolder: '$(System.DefaultWorkingDirectory)/target'
                overWrite: True
              displayName: 'Copy to Git repos dir'

            - script: |
                pushd target > /dev/null
                pwd
                git config --local user.name "Bluespoon Bot"
                git config --local user.email "bluespoonbot@capra314cabra.github.io"
                git add .
                git commit -m "Auto Publishing GitHub Pages From '$(Build.SourceBranch)'"
                popd > /dev/null
              displayName: 'Commit compiled changes'
    
            - task: DownloadSecureFile@1
              inputs:
                secureFile: bs_github_rsa
              displayName: 'Get the deploy key'

            - script: |
                pushd target > /dev/null
                git push origin gh-pages
                popd > /dev/null
              displayName: 'Publish all'
